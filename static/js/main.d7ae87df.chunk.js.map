{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","loading","text","author","fetchData","bind","a","this","fetch","then","response","json","data","randomIndex","Math","floor","random","length","setState","catch","error","console","className","id","onClick","target","rel","href","encodeURIComponent","style","fontSize","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAmFeA,E,kDA9Ef,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACCC,MAAQ,CACXC,SAAS,EACTC,KAAM,GACNC,OAAQ,IAEZ,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBAPD,E,4FAWlB,sBAAAC,EAAA,sDACEC,KAAKH,YADP,gD,6EAIA,WAAa,IAAD,OACVI,MAAM,+BACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAS,IAAIC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,QAC/D,EAAKC,SAAS,CAAEhB,KAAMU,EAAKC,GAAL,KAA2BV,OAAQS,EAAKC,GAAL,OAA6BZ,SAAS,OAEhGkB,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,Q,oBAM9B,WACF,OAAIb,KAAKP,MAAMC,QACN,8CAGJM,KAAKP,MAAME,MAAQK,KAAKP,MAAMG,OAC1B,4CAIT,gCACI,sBAAKmB,UAAU,UAAUC,GAAG,YAA5B,cACI,sBAAKA,GAAG,mBAAR,UACE,qBAAKD,UAAU,MAAf,SACA,qBAAKA,UAAU,MAAf,SACJ,sBAAKC,GAAG,OAAR,UAAe,mBAAGD,UAAU,sBAA5B,IAAsDf,KAAKP,MAAME,KAAjE,IAAuE,mBAAGoB,UAAU,8BAGhF,qBAAKA,UAAU,MAAf,SACA,qBAAKA,UAAU,MAAf,SACE,sBAAKC,GAAG,SAAR,cAAyC,OAAtBhB,KAAKP,MAAMG,OAAkB,UAAYI,KAAKP,MAAMG,iBAI7E,qBAAKoB,GAAG,eAAR,SACI,sBAAKD,UAAU,MAAf,UACA,qBAAKA,UAAU,MAAf,SACA,wBAAQE,QAAWjB,KAAKH,UAAWmB,GAAG,YAAtC,mCAEA,qBAAKD,UAAU,MAAMC,GAAG,kBAAxB,SACA,mBAAGA,GAAG,cAAcE,OAAO,SAASC,IAAI,aAAaC,KAAM,8EAC3DC,mBACE,IAAMrB,KAAKP,MAAME,KAAO,MAAQK,KAAKP,MAAMG,QAF7C,SAIA,mBAAGmB,UAAU,iBAAiBO,MAAO,CAACC,SAAU,kBAKvD,yBAAQR,UAAU,SAAlB,sBACc,mBACjBG,OAAO,SACPE,KAAK,6CAFY,kCADd,gC,GAnEeI,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d7ae87df.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\n\nclass App extends React.Component {\nconstructor(props){\n  super(props);\n    this.state = {\n      loading: true,\n      text: \"\",\n      author: \"\",\n  }\n  this.fetchData = this.fetchData.bind(this);\n \n}\n  \nasync componentDidMount() {\n  this.fetchData();\n}\n\nfetchData() {\n  fetch('https://type.fit/api/quotes')\n  .then(response => response.json())\n  .then(data => {let randomIndex = Math.floor(Math.random() * data.length);\n    this.setState({ text: data[randomIndex][\"text\"], author: data[randomIndex][\"author\"], loading: false })\n})\n  .catch(error => console.error(error));\n  \n}\n\n\n\n  render() {\nif (this.state.loading) {\n  return <div>loading...</div>;\n}\n\nif (!this.state.text & !this.state.author) {\n  return <div>No Quote!</div>;\n}\n\n    return (\n<div>\n    <div className=\"wrapper\" id=\"quote-box\"> {/* wrapper is only used because FCC project asks for it */}\n        <div id=\"quote-and-author\">\n          <div className=\"row\">\n          <div className=\"col\"> \n      <div id=\"text\"><i className=\"fas fa-quote-left\"></i> {this.state.text} <i className=\"fas fa-quote-right\"></i></div>\n      </div>\n        </div>\n          <div className=\"row\">\n          <div className=\"col\">\n            <div id=\"author\">~{this.state.author === null ? \"Unknown\" : this.state.author }</div>\n          </div>\n          </div>\n      </div>\n      <div id=\"containertwo\">\n          <div className=\"row\">\n          <div className=\"col\">\n          <button onClick = {this.fetchData} id=\"new-quote\">Click For New Quote</button>\n          </div>\n          <div className=\"col\" id=\"tweet-quote-box\">\n          <a id=\"tweet-quote\" target=\"_blank\" rel=\"noreferrer\" href={'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' + \n          encodeURIComponent(\n            '\"' + this.state.text + '\" ~' + this.state.author\n            )}>\n          <i className=\"fab fa-twitter\" style={{fontSize: 36}}></i></a>\n          </div>\n          </div>\n      </div>\n   </div>\n   <footer className=\"footer\">\n        Coded By <a \ntarget=\"_blank\"\nhref=\"https://forum.freecodecamp.org/u/rundownx3\">\n  RussellTheProgrammer</a> for FCC curriculum\n      </footer>\n</div>\n    );\n  }\n}\n\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}